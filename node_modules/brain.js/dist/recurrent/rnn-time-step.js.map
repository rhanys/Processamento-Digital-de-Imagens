{"version":3,"sources":["../../src/recurrent/rnn-time-step.js"],"names":["RNNTimeStep","options","inputLookup","inputLookupLength","outputLookup","outputLookupLength","model","outputSize","lastHiddenSize","hiddenLayers","length","outputConnector","RandomMatrix","output","layers","equation","Equation","outputs","equationConnection","equationConnections","initialLayerInputs","getEquation","input","Matrix","inputSize","push","i","max","add","multiply","equations","allMatrices","map","size","createHiddenLayers","Error","hiddenMatrix","property","hasOwnProperty","createOutputMatrix","backpropagate","rawInput","run","runObject","runNumbers","runArrays","count","forecast","forecastNumbers","forecastArrays","data","Object","assign","constructor","trainDefaults","iterations","errorThresh","log","console","logPeriod","learningRate","callback","callbackPeriod","formatData","trainInput","trainInputOutput","trainArrays","trainNumbers","error","Infinity","initialize","sum","j","err","trainPattern","isNaN","bindEquation","errorSum","predictTarget","end","isRunnable","lookup","toArray","lastOutput","runInput","weights","equationIndex","result","inputArray","toArrayShort","toObjectPartial","toObject","object","totalSize","inputIndex","outputIndex","toArrays","outputMatrix","slice","Float32Array","Array","isArray","datum","from","ArrayLookupTable","table","LookupTable","lookupTable","defaults","p","type","name","hiddenLayer","toJSON","json","hiddenSizes","forEach","fromJSON","states","jsonString","JSON","stringify","matrixOrigin","m","stateIndex","state","previousConnectionIndex","left","rows","columns","right","product","connection","indexOf","matrixToString","formatInputData","formatOutputData","toInner","fnString","toString","split","shift","join","pop","replace","fileName","fnName","value","toLowerCase","statesRaw","usedFunctionNames","innerFunctionsSwitch","forwardFn","forceForecast","src","zeros","softmax","randomF","sampleI","maxI","Function","RNN","decayRate","smoothEps","regc","clipval"],"mappings":"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","file":"rnn-time-step.js","sourcesContent":["import Matrix from './matrix';\nimport RandomMatrix from './matrix/random-matrix';\nimport Equation from './matrix/equation';\nimport RNN from './rnn';\nimport zeros from '../utilities/zeros';\nimport softmax from './matrix/softmax';\nimport {randomF} from '../utilities/random';\nimport sampleI from './matrix/sample-i';\nimport maxI from './matrix/max-i';\nimport lookup from \"../lookup\";\nimport LookupTable from '../utilities/lookup-table';\nimport ArrayLookupTable from '../utilities/array-lookup-table';\nimport {\n  arraysToFloat32Arrays,\n  arrayToFloat32Arrays,\n  objectsToFloat32Arrays,\n  objectToFloat32Arrays,\n  objectToFloat32Array } from '../utilities/cast';\n\nexport default class RNNTimeStep extends RNN {\n  constructor(options) {\n    super(options);\n    this.inputLookup = null;\n    this.inputLookupLength = null;\n    this.outputLookup = null;\n    this.outputLookupLength = null;\n  }\n\n  createOutputMatrix() {\n    let model = this.model;\n    let outputSize = this.outputSize;\n    let lastHiddenSize = this.hiddenLayers[this.hiddenLayers.length - 1];\n\n    //whd\n    model.outputConnector = new RandomMatrix(outputSize, lastHiddenSize, 0.08);\n    //bd\n    model.output = new RandomMatrix(outputSize, 1, 0.08);\n  }\n\n  bindEquation() {\n    let model = this.model;\n    let hiddenLayers = this.hiddenLayers;\n    let layers = model.hiddenLayers;\n    let equation = new Equation();\n    let outputs = [];\n    let equationConnection = model.equationConnections.length > 0\n      ? model.equationConnections[model.equationConnections.length - 1]\n      : this.initialLayerInputs\n      ;\n\n      // 0 index\n    let output = this.getEquation(equation, equation.input(new Matrix(this.inputSize, 1)), equationConnection[0], layers[0]);\n    outputs.push(output);\n    // 1+ indices\n    for (let i = 1, max = hiddenLayers.length; i < max; i++) {\n      output = this.getEquation(equation, output, equationConnection[i], layers[i]);\n      outputs.push(output);\n    }\n\n    model.equationConnections.push(outputs);\n    equation.add(equation.multiply(model.outputConnector, output), model.output);\n    model.equations.push(equation);\n  }\n\n  mapModel() {\n    let model = this.model;\n    let hiddenLayers = model.hiddenLayers;\n    let allMatrices = model.allMatrices;\n    this.initialLayerInputs = this.hiddenLayers.map((size) => new Matrix(size, 1));\n\n    this.createHiddenLayers();\n    if (!model.hiddenLayers.length) throw new Error('net.hiddenLayers not set');\n    for (let i = 0, max = hiddenLayers.length; i < max; i++) {\n      let hiddenMatrix = hiddenLayers[i];\n      for (let property in hiddenMatrix) {\n        if (!hiddenMatrix.hasOwnProperty(property)) continue;\n        allMatrices.push(hiddenMatrix[property]);\n      }\n    }\n\n    this.createOutputMatrix();\n    if (!model.outputConnector) throw new Error('net.model.outputConnector not set');\n    if (!model.output) throw new Error('net.model.output not set');\n\n    allMatrices.push(model.outputConnector);\n    allMatrices.push(model.output);\n  }\n\n  backpropagate() {\n    for (let i = this.model.equations.length - 1; i > -1; i--) {\n      this.model.equations[i].backpropagate();\n    }\n  }\n\n\n  /**\n   *\n   * @param {number[]|number[][]|object|object[][]} [rawInput]\n   * @returns {number[]|number|object|object[]|object[][]}\n   */\n  run(rawInput) {\n    if (this.inputSize === 1) {\n      if (this.outputLookup) {\n        this.run = this.runObject;\n        return this.runObject(rawInput);\n      }\n      this.run = this.runNumbers;\n      return this.runNumbers(rawInput);\n    }\n    this.run = this.runArrays;\n    return this.runArrays(rawInput);\n  }\n\n  forecast(input, count) {\n    if (this.inputSize === 1) {\n      this.forecast = this.forecastNumbers;\n      return this.forecastNumbers(input, count);\n    }\n    this.forecast = this.forecastArrays;\n    return this.forecastArrays(input, count);\n  }\n\n  /**\n   *\n   * @param {Object[]|String[]} data an array of objects: `{input: 'string', output: 'string'}` or an array of strings\n   * @param {Object} [options]\n   * @returns {{error: number, iterations: number}}\n   */\n  train(data, options = {}) {\n    options = Object.assign({}, this.constructor.trainDefaults, options);\n    const iterations = options.iterations;\n    const errorThresh = options.errorThresh;\n    const log = options.log === true ? console.log : options.log;\n    const logPeriod = options.logPeriod;\n    const learningRate = options.learningRate || this.learningRate;\n    const callback = options.callback;\n    const callbackPeriod = options.callbackPeriod;\n    data = this.formatData(data);\n    if (data[0].input) {\n      this.trainInput = this.trainInputOutput;\n    } else if (data[0].length > 0) {\n      if (data[0][0].length > 0) {\n        this.trainInput = this.trainArrays;\n      } else {\n        if (this.inputSize > 1) {\n          data = [data];\n          this.trainInput = this.trainArrays;\n        } else {\n          this.trainInput = this.trainNumbers;\n        }\n      }\n    }\n\n\n    let error = Infinity;\n    let i;\n\n    if (!this.model) {\n      this.initialize();\n    }\n\n    for (i = 0; i < iterations && error > errorThresh; i++) {\n      let sum = 0;\n      for (let j = 0; j < data.length; j++) {\n        let err = this.trainPattern(data[j], learningRate);\n        sum += err;\n      }\n      error = sum / data.length;\n\n      if (isNaN(error)) throw new Error('network error rate is unexpected NaN, check network configurations and try again');\n      if (log && (i % logPeriod === 0)) {\n        log(`iterations: ${ i }, training error: ${ error }`);\n      }\n      if (callback && (i % callbackPeriod === 0)) {\n        callback({ error: error, iterations: i });\n      }\n    }\n\n    return {\n      error: error,\n      iterations: i\n    };\n  }\n\n  trainNumbers(input) {\n    const model = this.model;\n    const equations = model.equations;\n    while (equations.length < input.length) {\n      this.bindEquation();\n    }\n    let errorSum = 0;\n    for (let i = 0, max = input.length - 1; i < max; i++) {\n      errorSum += equations[i].predictTarget(input[i], input[i + 1]);\n    }\n    this.end();\n    return errorSum / input.length;\n  }\n\n  runNumbers(input) {\n    if (!this.isRunnable) return null;\n    const model = this.model;\n    const equations = model.equations;\n    if (this.inputLookup) {\n      input = lookup.toArray(this.inputLookup, input, this.inputLookupLength);\n    }\n    while (equations.length <= input.length) {\n      this.bindEquation();\n    }\n    let lastOutput;\n    for (let i = 0; i < input.length; i++) {\n      lastOutput = equations[i].runInput([input[i]]);\n    }\n    this.end();\n    return lastOutput.weights[0];\n  }\n\n  forecastNumbers(input, count) {\n    if (!this.isRunnable) return null;\n    const model = this.model;\n    const equations = model.equations;\n    const length = input.length + count;\n    while (equations.length <= length) {\n      this.bindEquation();\n    }\n    let lastOutput;\n    let equationIndex = 0;\n    for (let i = 0; i < input.length; i++) {\n      lastOutput = equations[equationIndex++].runInput([input[i]]);\n    }\n    const result = [lastOutput.weights[0]];\n    for (let i = 0, max = count - 1; i < max; i++) {\n      lastOutput = equations[equationIndex++].runInput(lastOutput.weights);\n      result.push(lastOutput.weights[0]);\n    }\n    this.end();\n    return result;\n  }\n\n  runObject(input) {\n    if (this.inputLookup === this.outputLookup) {\n      const inputArray = lookup.toArrayShort(this.inputLookup, input);\n      return lookup.toObjectPartial(this.outputLookup, this.forecastNumbers(inputArray, this.outputLookupLength - inputArray.length), inputArray.length);\n    }\n    return lookup.toObject(this.outputLookup, this.forecastNumbers(lookup.toArray(this.inputLookup, input, this.inputLookupLength), this.outputLookupLength));\n  }\n\n  trainInputOutput(object) {\n    const model = this.model;\n    const input = object.input;\n    const output = object.output;\n    const totalSize = input.length + output.length;\n    const equations = model.equations;\n    while (equations.length < totalSize) {\n      this.bindEquation();\n    }\n    let errorSum = 0;\n    let equationIndex = 0;\n    for (let inputIndex = 0, max = input.length - 1; inputIndex < max; inputIndex++) {\n      errorSum += equations[equationIndex++].predictTarget(input[inputIndex], input[inputIndex + 1]);\n    }\n    errorSum += equations[equationIndex++].predictTarget(input[input.length - 1], output[0]);\n    for (let outputIndex = 0, max = output.length - 1; outputIndex < max; outputIndex++) {\n      errorSum += equations[equationIndex++].predictTarget(output[outputIndex], output[outputIndex + 1]);\n    }\n    this.end();\n    return errorSum / totalSize;\n  }\n\n  trainArrays(input) {\n    const model = this.model;\n    const equations = model.equations;\n    while (equations.length < input.length) {\n      this.bindEquation();\n    }\n    let errorSum = 0;\n    for (let i = 0, max = input.length - 1; i < max; i++) {\n      errorSum += equations[i].predictTarget(input[i], input[i + 1]);\n    }\n    this.end();\n    return errorSum / input.length;\n  }\n\n  runArrays(input) {\n    if (!this.isRunnable) return null;\n    const model = this.model;\n    const equations = model.equations;\n    while (equations.length <= input.length) {\n      this.bindEquation();\n    }\n    if (this.inputLookup) {\n      input = lookup.toArrays(this.inputLookup, input, this.inputLookupLength);\n    }\n    let lastOutput;\n    for (let i = 0; i < input.length; i++) {\n      let outputMatrix = equations[i].runInput(input[i]);\n      lastOutput = outputMatrix.weights;\n    }\n    this.end();\n    if (this.outputLookup) {\n      return lookup.toObject(this.outputLookup, lastOutput);\n    }\n    return lastOutput;\n  }\n\n  forecastArrays(input, count) {\n    if (!this.isRunnable) return null;\n    const model = this.model;\n    const equations = model.equations;\n    const length = input.length + count;\n    while (equations.length <= length) {\n      this.bindEquation();\n    }\n    let lastOutput;\n    let equationIndex = 0;\n    for (let i = 0; i < input.length; i++) {\n      lastOutput = equations[equationIndex++].runInput(input[i]);\n    }\n    const result = [lastOutput.weights];\n    for (let i = 0, max = count - 1; i < max; i++) {\n      lastOutput = equations[equationIndex++].runInput(lastOutput.weights);\n      result.push(lastOutput.weights.slice(0));\n    }\n    this.end();\n    return result;\n  }\n\n  end() {\n    this.model.equations[this.model.equations.length - 1].runInput(new Float32Array(this.outputSize));\n  }\n\n  /**\n   *\n   * @param data\n   * @returns {*}\n   */\n  formatData(data) {\n    if (data[0].input) {\n      if (Array.isArray(data[0].input[0])) {\n        if (this.inputSize > 1) {\n          // [{ input: number[][], output: number[][] }] to [{ input: Float32Array[], output: Float32Array[] }]\n          const result = [];\n          for (let i = 0; i < data.length; i++) {\n            const datum = data[i];\n            result.push({\n              input: arraysToFloat32Arrays(datum.input),\n              output: arraysToFloat32Arrays(datum.output)\n            });\n          }\n          return result;\n        } else {\n          // { input: [[1,4],[2,3]], output: [[3,2],[4,1]] } -> [[1,4],[2,3],[3,2],[4,1]]\n          const result = [];\n          for (let i = 0; i < data.length; i++) {\n            const datum = data[i];\n            result.push({\n              input: Float32Array.from(datum.input),\n              output: Float32Array.from(datum.output)\n            });\n          }\n          return result;\n        }\n      } else if (Array.isArray(data[0].input)) {\n        if (typeof data[0].input[0] === 'number') {\n          // [{ input: number[], output: number[] }] to [{ input: Float32Array, output: Float32Array }]\n          if (this.inputSize === 1) {\n            const result = [];\n            for (let i = 0; i < data.length; i++) {\n              const datum = data[i];\n              result.push({\n                input: arrayToFloat32Arrays(datum.input),\n                output: arrayToFloat32Arrays(datum.output)\n              });\n            }\n            return result;\n          }\n          throw new Error('data is not recurrent');\n        } else {\n          // [{ input: object[], output: object[] }] to [{ input: Float32Array[], output: Float32Array[] }]\n          const inputLookup = new ArrayLookupTable(data, 'input');\n          const outputLookup = new ArrayLookupTable(data, 'output');\n          const result = [];\n\n          for (let i = 0; i < data.length; i++) {\n            const datum = data[i];\n            result.push({\n              input: objectsToFloat32Arrays(datum.input, inputLookup),\n              output: objectsToFloat32Arrays(datum.output, outputLookup)\n            });\n          }\n\n          this.inputLookup = inputLookup.table;\n          this.inputLookupLength = inputLookup.length;\n          this.outputLookup = outputLookup.table;\n          this.outputLookupLength = outputLookup.length;\n          return result;\n        }\n      } else if (this.inputSize === 1) {\n        // [{ input: object, output: object }] to [{ input: Float32Array, output: Float32Array }]\n        const inputLookup = new LookupTable(data, 'input');\n        const outputLookup = new LookupTable(data, 'output');\n        const result = [];\n        for (let i = 0; i < data.length; i++) {\n          const datum = data[i];\n          result.push({\n            input: objectToFloat32Arrays(datum.input),\n            output: objectToFloat32Arrays(datum.output)\n          });\n          this.inputLookup = inputLookup.table;\n          this.inputLookupLength = inputLookup.length;\n          this.outputLookup = outputLookup.table;\n          this.outputLookupLength = outputLookup.length;\n        }\n        return result;\n      }\n    } else if (Array.isArray(data)) {\n      if (Array.isArray(data[0])) {\n        if (this.inputSize > 1) {\n          // number[][][] to Float32Array[][][]\n          if (Array.isArray(data[0][0])) {\n            const result = [];\n            for (let i = 0; i < data.length; i++) {\n              result.push(arraysToFloat32Arrays(data[i]));\n            }\n            return result;\n          } else {\n            // number[][] to Float32Array[][]\n            const result = [];\n            for (let i = 0; i < data.length; i++) {\n              result.push(Float32Array.from(data[i]));\n            }\n            return result;\n          }\n        } else if (this.inputSize === 1) {\n          // number[][] to Float32Array[][][]\n          const result = [];\n          for (let i = 0; i < data.length; i++) {\n            result.push(arrayToFloat32Arrays(data[i]));\n          }\n          return result;\n        }\n      } else if (this.inputSize === 1) {\n\n        if (Array.isArray(data) && typeof data[0] === 'number') {\n          // number[] to Float32Array[]\n          const result = [];\n          for (let i = 0; i < data.length; i++) {\n            result.push(Float32Array.from([data[i]]));\n          }\n          return result;\n        } else if (!data[0].hasOwnProperty(0)) {\n          // object[] to Float32Array[]\n          const result = [];\n          const lookupTable = new LookupTable(data);\n          for (let i = 0; i < data.length; i++) {\n            result.push(objectToFloat32Arrays(data[i]));\n          }\n          this.inputLookup = lookupTable.table;\n          this.inputLookupLength = lookupTable.length;\n          this.outputLookup = lookupTable.table;\n          this.outputLookupLength = lookupTable.length;\n          return result;\n        }\n\n      }\n    }\n    throw new Error('unknown data shape or configuration');\n  }\n\n  /**\n   *\n   * @returns {Object}\n   */\n  toJSON() {\n    const defaults = this.constructor.defaults;\n    if (!this.model) {\n      this.initialize();\n    }\n    let model = this.model;\n    let options = {};\n    for (let p in defaults) {\n      if (defaults.hasOwnProperty(p)) {\n        options[p] = this[p];\n      }\n    }\n\n    return {\n      type: this.constructor.name,\n      options: options,\n      hiddenLayers: model.hiddenLayers.map((hiddenLayer) => {\n        let layers = {};\n        for (let p in hiddenLayer) {\n          layers[p] = hiddenLayer[p].toJSON();\n        }\n        return layers;\n      }),\n      outputConnector: this.model.outputConnector.toJSON(),\n      output: this.model.output.toJSON()\n    };\n  }\n\n  fromJSON(json) {\n    const defaults = this.constructor.defaults;\n    const options = json.options;\n    this.model = null;\n    this.hiddenLayers = null;\n    const allMatrices = [];\n    const hiddenLayers = [];\n\n    // backward compatibility for hiddenSizes\n    (json.hiddenLayers || json.hiddenSizes).forEach((hiddenLayer) => {\n      let layers = {};\n      for (let p in hiddenLayer) {\n        layers[p] = Matrix.fromJSON(hiddenLayer[p]);\n        allMatrices.push(layers[p]);\n      }\n      hiddenLayers.push(layers);\n    });\n\n    const outputConnector = Matrix.fromJSON(json.outputConnector);\n    allMatrices.push(outputConnector);\n    const output = Matrix.fromJSON(json.output);\n    allMatrices.push(output);\n\n    Object.assign(this, defaults, options);\n\n    // backward compatibility\n    if (options.hiddenSizes) {\n      this.hiddenLayers = options.hiddenSizes;\n    }\n\n    this.model = {\n      hiddenLayers,\n      output,\n      allMatrices,\n      outputConnector,\n      equations: [],\n      equationConnections: [],\n    };\n    this.initialLayerInputs = this.hiddenLayers.map((size) => new Matrix(size, 1));\n    this.bindEquation();\n  }\n\n  /**\n   *\n   * @returns {Function}\n   */\n  toFunction() {\n    const model = this.model;\n    const equations = this.model.equations;\n    const inputSize = this.inputSize;\n    const inputLookup = this.inputLookup;\n    const inputLookupLength = this.inputLookupLength;\n    const outputLookup = this.outputLookup;\n    const outputLookupLength = this.outputLookupLength;\n    const equation = equations[1];\n    const states = equation.states;\n    const jsonString = JSON.stringify(this.toJSON());\n\n    function matrixOrigin(m, stateIndex) {\n      for (let i = 0, max = states.length; i < max; i++) {\n        let state = states[i];\n\n        if (i === stateIndex) {\n          let j = previousConnectionIndex(m);\n          switch (m) {\n            case state.left:\n              if (j > -1) {\n                return `typeof prevStates[${ j }] === 'object' ? prevStates[${ j }].product : new Matrix(${ m.rows }, ${ m.columns })`;\n              }\n            case state.right:\n              if (j > -1) {\n                return `typeof prevStates[${ j }] === 'object' ? prevStates[${ j }].product : new Matrix(${ m.rows }, ${ m.columns })`;\n              }\n            case state.product:\n              return `new Matrix(${ m.rows }, ${ m.columns })`;\n            default:\n              throw Error('unknown state');\n          }\n        }\n\n        if (m === state.product) return `states[${ i }].product`;\n        if (m === state.right) return `states[${ i }].right`;\n        if (m === state.left) return `states[${ i }].left`;\n      }\n    }\n\n    function previousConnectionIndex(m) {\n      const connection = model.equationConnections[0];\n      const states = equations[0].states;\n      for (let i = 0, max = states.length; i < max; i++) {\n        if (states[i].product === m) {\n          return i;\n        }\n      }\n      return connection.indexOf(m);\n    }\n\n    function matrixToString(m, stateIndex) {\n      if (!m || !m.rows || !m.columns) return 'null';\n      if (m === model.outputConnector) return `json.outputConnector`;\n      if (m === model.output) return `json.output`;\n\n      for (let i = 0, max = model.hiddenLayers.length; i < max; i++) {\n        let hiddenLayer = model.hiddenLayers[i];\n        for (let p in hiddenLayer) {\n          if (!hiddenLayer.hasOwnProperty(p)) continue;\n          if (hiddenLayer[p] !== m) continue;\n          return `json.hiddenLayers[${ i }].${ p }`;\n        }\n      }\n\n      return matrixOrigin(m, stateIndex);\n    }\n\n    function formatInputData() {\n      if (!inputLookup) return '';\n      if (inputSize === 1) {\n        if (inputLookup === outputLookup) {\n          return `function lookupInput(input) {\n            var table = ${ JSON.stringify(inputLookup) };\n            var result = [];\n            for (var p in table) {\n              if (!input.hasOwnProperty(p)) break;\n              result.push(Float32Array.from([input[p]]));\n            }\n            return result;\n          }`;\n        }\n        return `function lookupInput(input) {\n          var table = ${ JSON.stringify(inputLookup) };\n          var result = [];\n          for (var p in table) {\n            result.push(Float32Array.from([input[p]]));\n          }\n          return result;\n        }`;\n      }\n      return `function lookupInput(rawInputs) {\n        var table = ${ JSON.stringify(inputLookup) };\n        var result = [];\n        for (var i = 0; i < rawInputs.length; i++) {\n          var rawInput = rawInputs[i];\n          var input = new Float32Array(${ inputLookupLength });\n          for (var p in table) {\n            input[table[p]] = rawInput.hasOwnProperty(p) ? rawInput[p] : 0;\n          }\n          result.push(input);\n        }\n        return result;\n      }`;\n    }\n\n    function formatOutputData() {\n      if (!outputLookup) return '';\n      if (inputSize === 1) {\n        if (inputLookup === outputLookup) {\n          return `function lookupOutputPartial(output, input) {\n            var table = ${ JSON.stringify(outputLookup) };\n            var offset = input.length;\n            var result = {};\n            var i = 0;\n            for (var p in table) {\n              if (i++ < offset) continue;\n              result[p] = output[table[p] - offset][0];\n            }\n            return result;\n          }`;\n        }\n        return `function lookupOutput(output) {\n          var table = ${ JSON.stringify(outputLookup) };\n          var result = {};\n          for (var p in table) {\n            result[p] = output[table[p]][0];\n          }\n          return result;\n        }`;\n      }\n      return `function lookupOutput(output) {\n        var table = ${ JSON.stringify(outputLookup) };\n        var result = {};\n        for (var p in table) {\n          result[p] = output[table[p]];\n        }\n        return result;\n      }`;\n    }\n\n    function toInner(fnString) {\n      // crude, but should be sufficient for now\n      // function() { body }\n      fnString = fnString.toString().split('{');\n      fnString.shift();\n      // body }\n      fnString = fnString.join('{');\n      fnString = fnString.split('}');\n      fnString.pop();\n      // body\n\n      return fnString.join('}').split('\\n').join('\\n        ')\n        .replace(\n          'product.weights = _input.weights = _this.inputValue;',\n          inputLookup && inputSize === 1\n            ? 'product.weights = _i < input.length ? input[_i]: prevStates[prevStates.length - 1].product.weights;'\n            : inputSize === 1\n              ? 'product.weights = [input[_i]];'\n              : 'product.weights = input[_i];')\n        .replace('product.deltas[i] = 0;', '')\n        .replace('product.deltas[column] = 0;', '')\n        .replace('left.deltas[leftIndex] = 0;', '')\n        .replace('right.deltas[rightIndex] = 0;', '')\n        .replace('product.deltas = left.deltas.slice(0);', '');\n    }\n\n    function fileName(fnName) {\n      return `src/recurrent/matrix/${ fnName.replace(/[A-Z]/g, function(value) { return '-' + value.toLowerCase(); }) }.js`;\n    }\n\n    let statesRaw = [];\n    let usedFunctionNames = {};\n    let innerFunctionsSwitch = [];\n    for (let i = 0, max = states.length; i < max; i++) {\n      let state = states[i];\n      statesRaw.push(`states[${ i }] = {\n      name: '${ state.forwardFn.name }',\n      left: ${ matrixToString(state.left, i) },\n      right: ${ matrixToString(state.right, i) },\n      product: ${ matrixToString(state.product, i) }\n    }`);\n\n      let fnName = state.forwardFn.name;\n      if (!usedFunctionNames[fnName]) {\n        usedFunctionNames[fnName] = true;\n        innerFunctionsSwitch.push(\n          `        case '${ fnName }':${ fnName !== 'forwardFn' ? ` //compiled from ${ fileName(fnName) }` : '' }\n          ${ toInner(state.forwardFn.toString()) }\n          break;`\n        );\n      }\n    }\n\n    const forceForecast = this.inputSize === 1 && this.outputLookup;\n    const src = `\n  var input = ${ this.inputLookup ? 'lookupInput(rawInput)' : 'rawInput' };\n  var json = ${ jsonString };\n  var output = [];\n  var states = [];\n  var prevStates;\n  var state;\n  var max = ${\n      forceForecast\n        ? inputLookup === outputLookup\n          ? inputLookupLength\n          : `input.length + ${ outputLookupLength - 1 }`\n        : 'input.length' };\n  for (var _i = 0; _i < max; _i++) {\n    prevStates = states;\n    states = [];\n    ${ statesRaw.join(';\\n    ') };\n    for (var stateIndex = 0, stateMax = ${ statesRaw.length }; stateIndex < stateMax; stateIndex++) {\n      state = states[stateIndex];\n      var product = state.product;\n      var left = state.left;\n      var right = state.right;\n      \n      switch (state.name) {\n${ innerFunctionsSwitch.join('\\n') }\n      }\n    }\n    ${ inputSize === 1 && inputLookup ? 'if (_i >= input.length - 1) { output.push(state.product.weights); }' : 'output = state.product.weights;' }\n  }\n  ${\n    outputLookup\n      ? outputLookup === inputLookup\n        ? 'return lookupOutputPartial(output, input)'\n        : 'return lookupOutput(output)'\n      : inputSize === 1\n        ? 'return output[0]'\n        : 'return output'\n  };\n  ${ formatInputData() }\n  ${ formatOutputData() }\n  \n  function Matrix(rows, columns) {\n    this.rows = rows;\n    this.columns = columns;\n    this.weights = zeros(rows * columns);\n  }\n  ${ zeros.toString() }\n  ${ softmax.toString().replace('_2.default', 'Matrix') }\n  ${ randomF.toString() }\n  ${ sampleI.toString() }\n  ${ maxI.toString() }`;\n    return new Function('rawInput', src);\n  }\n}\n\nRNNTimeStep.defaults = {\n  inputSize: 1,\n  hiddenLayers: [20],\n  outputSize: 1,\n  learningRate: 0.01,\n  decayRate: 0.999,\n  smoothEps: 1e-8,\n  regc: 0.000001,\n  clipval: 5\n};\n\nRNNTimeStep.trainDefaults = RNN.trainDefaults;"]}